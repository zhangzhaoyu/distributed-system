<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://activemq.apache.org/schema/core
       http://activemq.apache.org/schema/core/activemq-core-5.11.1.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/jms
       http://www.springframework.org/schema/jms/spring-jms-4.0.xsd">
    <context:property-placeholder location="classpath:/properties/antenna-service.properties" ignore-unresolvable="true"
                                  order="2"/>

    <!-- Auto scan the components -->
    <context:component-scan base-package="com.ani.octopus.antenna"/>
    <!-- AntennaTemplate Bean -->
    <bean id="antennaTemplate" class="com.ani.octopus.antenna.core.AntennaTemplate" />

    <!--jms factory-->
    <amq:connectionFactory id="antennaServiceConnectionFactory"
                           brokerURL="tcp://${antenna.jms.broker.url}:${antenna.jms.broker.port}"
                           clientID="${jms.clientId}"/>
    <bean id="antennaServiceJmsQueueConnectionFactory"
          class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
        <property name="targetConnectionFactory" ref="antennaServiceConnectionFactory"/>
        <!--<property name="username" value="${mq.username}"/>-->
    </bean>
    <bean id="antennaServiceJmsConnectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="antennaServiceJmsQueueConnectionFactory"/>
        <property name="sessionCacheSize" value="50"/>
        <!--<property name="exceptionListener" ref="jmsExceptionListener"/>-->
    </bean>

    <bean id="messageTopicDestination" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="${antenna.jms.queue.service.octopus}.message"/>
    </bean>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="antennaServiceJmsConnectionFactory"/>
        <property name="defaultDestination" ref="messageTopicDestination"/>
        <property name="pubSubDomain" value="true"/>
        <!-- Value = javax.jms.DeliveryMode.PERSISTENT -->
        <property name="deliveryMode" value="2"/>
        <!-- Value = javax.jms.Session.CLIENT_ACKNOWLEDGE -->
        <property name="sessionAcknowledgeMode" value="1"/>
        <!-- Needs to be true for the deliveryMode to work -->
        <property name="explicitQosEnabled" value="true"/>
    </bean>

    <!-- ObjectMessageListener-->
    <jms:listener-container connection-factory="antennaServiceJmsConnectionFactory" destination-type="durableTopic">
        <jms:listener destination="${antenna.jms.queue.service.octopus}.message"
                      ref="objectMessageListener"
                      method="onNotifyMessage" />
    </jms:listener-container>

    <!--jms-clients-->
    <bean id="aniObjectController" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
        <property name="connectionFactory"
                  ref="antennaServiceJmsConnectionFactory"/>
        <property name="queueName" value="${antenna.jms.queue.service.octopus}.aniObjectController"/>
        <property name="serviceInterface" value="com.ani.octopus.object.controller.AniObjectController"/>
    </bean>

    <bean id="accountServiceFacade" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
        <property name="connectionFactory"
                  ref="antennaServiceJmsConnectionFactory"/>
        <property name="queueName" value="${antenna.jms.queue.service.octopus}.AccountServiceFacade"/>
        <property name="serviceInterface" value="com.ani.octopus.account.interfaces.AccountServiceFacade"/>
    </bean>

    <bean id="accountGroupServiceFacade" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
        <property name="connectionFactory"
                  ref="antennaServiceJmsConnectionFactory"/>
        <property name="queueName" value="${antenna.jms.queue.service.octopus}.AccountGroupServiceFacade"/>
        <property name="serviceInterface" value="com.ani.octopus.account.interfaces.AccountGroupServiceFacade"/>
    </bean>

    <bean id="aniStubMetaService" class="org.springframework.jms.remoting.JmsInvokerProxyFactoryBean">
        <property name="connectionFactory" ref="antennaServiceJmsConnectionFactory" />
        <property name="queueName" value="${antenna.jms.queue.service.octopus}.aniStubMetaService" />
        <property name="serviceInterface" value="com.ani.octopus.stub.core.service.AniStubMetaService" />
    </bean>
</beans>